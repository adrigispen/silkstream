AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: SilkStream API

Globals:
  Function:
    Timeout: 30
    Runtime: nodejs18.x
    Environment:
      Variables:
        AWS_BUCKET_NAME: !Ref VideosBucket

Resources:
  SilkStreamApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod
      Cors:
        AllowMethods: "'GET,POST,PUT,DELETE,PATCH,OPTIONS'"
        AllowHeaders: "'Content-Type'"
        AllowOrigin: "'*'" # Update with domain later

  VideosBucket:
    Type: AWS::S3::Bucket
    Properties:
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders: ["*"]
            AllowedMethods: [GET, PUT, POST]
            AllowedOrigins: ["*"] # Update with domain later
            MaxAge: 3600

  SSMPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - ssm:GetParameter
              - ssm:GetParameters
              - ssm:GetParametersByPath
            Resource:
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/silkstream/*"

  SilkStreamFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../server/dist
      Handler: lambdaHandler.handler
      Events:
        GetVideos:
          Type: Api
          Properties:
            RestApiId: !Ref SilkStreamApi
            Path: /videos
            Method: GET
        GetUploadUrl:
          Type: Api
          Properties:
            RestApiId: !Ref SilkStreamApi
            Path: /get-upload-url
            Method: POST
        UpdateMetadata:
          Type: Api
          Properties:
            RestApiId: !Ref SilkStreamApi
            Path: /videos/{videoId}/metadata
            Method: PATCH
        GetTagSuggestions:
          Type: Api
          Properties:
            RestApiId: !Ref SilkStreamApi
            Path: /tags/suggest
            Method: GET
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref VideosBucket
        - DynamoDBCrudPolicy:
            TableName: silkstream-vids
        - DynamoDBCrudPolicy:
            TableName: silkstream-tags
        - Statement:
            - Effect: Allow
              Action:
                - ssm:GetParameter
                - ssm:GetParameters
                - ssm:GetParametersByPath
              Resource: !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/silkstream/*"
